<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>T:DM</title>
  
  <subtitle>diary</subtitle>
  <link href="http://mietl.github.io/atom.xml" rel="self"/>
  
  <link href="http://mietl.github.io/"/>
  <updated>2024-03-05T05:57:55.435Z</updated>
  <id>http://mietl.github.io/</id>
  
  <author>
    <name>mietl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024-2-14</title>
    <link href="http://mietl.github.io/2024/02/14/dear_diary/2024-2-14/"/>
    <id>http://mietl.github.io/2024/02/14/dear_diary/2024-2-14/</id>
    <published>2024-02-14T19:43:33.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8e8cf64ed2d6507cfb1d619f5c25327bee696184a47106258394ee3a07bc4ef5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>2024-ed</title>
    <link href="http://mietl.github.io/2024/02/06/dear_diary/2024-ed/"/>
    <id>http://mietl.github.io/2024/02/06/dear_diary/2024-ed/</id>
    <published>2024-02-06T19:43:33.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9efe2158d29fff50823aa1debeca94ed8ec3136f11ab1773111571e411b67728">f821c1cd86e92e41916e027feb9b5da23e4d62cac29569a0c6b26ccfe73a80ad3e9aa48b496dbdb85fc6f2f6f916e7af4bad4d82a1fadb4171ed86fcb7de4a2996391fdaac0bb5e52b3ff2cbb4eb93c91d95984223c2dddc680bd3f6f5f181813750770806931c0913d53e20ad9b0d45272ba2deb9a0d30ac8f4efaac848fd68ec204618c269d008b214b4fe224375640e205925872be3c1f9e49f7d019263cdef8f7b3f322ab181a825128ec779afad67bc9e874ae12e77d2035deda1f21bd898e6d42aa07b47a2c22081959ddbe10b43d3b968298f6dcb1e56c028d20460bc0a4b2b2e644240e2437812f93158da89d16dbc2a0145b8aa64127dd3119caf4e3e0f440199c5911b6decaf48d0b6ad60371da420f818c15ff9a1177ac5690948de3bfba9127c7cbec17fe7fb69061ce0aa5c1f272757f944ebff3fbee428d0d61a302c53a7408841e83becfbb0410ba8d83b040918158fa1895f4e9ea5176d1053ab9574da90e4efaeb0406084defe51d5d057d822d888ac06f1bc00189c9b1e6e70dde65fc40a40d213500edd517001e1e6b74310f8d674be9727045abf03e148718f35f1155ec5ed671af1916d75585ae4eba0f85ff1ec267f78b6da51a4fff196ce5434446e7f3f1e8aaf4c049a37058dc5e12fcf7e24cec0958561bbd47d8633d5ee8d8360177675af22cf833dcfa7b7a44578fe7c33299c57f92f23044502734808c1db10d14ebcc41c0f77c2c4d814aaf4bf45f0c434af488ab37c5e510d96d9d3fd3a678655961d21ba4e886beae6d72f943e958a3535b3a9a5045db43669da5d101d269a29bca69d6773119bcd5014ff08d2c29fed95c28547524753ee4df41f14e0a28d88f56850e6a2233814e928526c81841af11f5ec717747a66a35cb1dcc51e81a8c9185121a035e4abe89f648981de744a998ca480122fff0a6d9fa33c626c1c7ff6997431749d6351fe5f54ef674bbffb78cf47c20c865d199188c2c0b6063ec2f114fda4d2d909d936b036bae48fdfa683b4c10b5e8775b8ce6ffc88244b6269960ae0034630c648b335840d05b0a4e1bf4439a11deb36b6dad57bd2f9f39ec1296fec11a30b232830d6defc1f7a16ff4bd54b10c8c5dd78d660213ca582f3a7a4c2ec003cc50eb9d67dc3a3598f91a7a2529a7b9b7bcd3919d6daf76f64b077885eeb52c896347675011691d7f9df1dd35d63537fb18b2d70efd17458caabf90e2f44ec1284707823548d4d7b9a8373e8c7f56061ae47844b72ed84f087502a77ee466c903e06337e4b09f21c03f40daa6bac7737183973feb59c4369e7b6620ea12b97d985f6db47eff47f2afc30dce16b7467a8e1c0160ab7cadfa52d8f56a58f52c71ecfe747f4e971245a1bffa70d754f65b0acd83d9a84f6616f97e3d1091ef14603df24a2fdff6878425a5bcab9a3d116e128b398752d820047ff7c923ca18b73b147c725e612bf44d2890d0ede0c667711f39f5a1614055dbcc876468337c48e8e1f6d69fc6eb19c070bfd6be2d0c01f30e722db2a79b5693006452dc854e35da4ece977a758be907d2182e9f29e41d6baad24f56c16c4bfb64bd5f6df259fadd85a01ac740832e8ad7fae6c1827f21374635f301749225cc869f4d9f4460c60f5d606aee04f06c61d05ca9d18f862f8a802948580615a1c4a965b4572b297f97ada947ab9983e218faaead75ce75cc549829645c6b54ee360913501adf42baa8ea5ab1545c5bc2ac9b364f010e86a9ddc5e30694ce6d3b8e0ca7f591467414ce7fce1ebd9a49b2af62f8f461ef60ccdf87a0bb0b3c6323977d40c985929ea177a99c81f51cce2b184367138f54d977d38c9d821639f63d4e240426617fddd6c62cb554b13dc054f534b7c59c04cb24c47aa4c2f5e2984ac3d7f29ee1ff62fe777ec91c10af2566140227c97ccf0a9ffeeaab4a1cf0517b446d465d11a53b95c50f176dbfbd79b9ac4866eafcb6a5751d57a855079501c8f8cc52d585ca9cdaa44635b355e187e4c89861fdbf0a0119cc068b1d8e4f5f58b8703b21f25956aeaa12f80dc8b77dbfc182976febbb9412fdbb7c4773cfec5a328a0ca495981b01fff4e46b5c373ff2a16c37114cc1597190ea7ae08490f11b847fdd8975b9122f9174a90e1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>pnpm</title>
    <link href="http://mietl.github.io/2024/01/10/build_tools/pnpm/"/>
    <id>http://mietl.github.io/2024/01/10/build_tools/pnpm/</id>
    <published>2024-01-10T15:25:27.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<p>快速、节省磁盘空间的软件包管理器</p><h3 id="节省磁盘空间"><a href="#节省磁盘空间" class="headerlink" title="节省磁盘空间"></a>节省磁盘空间</h3><h4 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h4><h4 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h4><h3 id="提高安装速度"><a href="#提高安装速度" class="headerlink" title="提高安装速度"></a>提高安装速度</h3><h3 id="非扁平的-node-modules-目录"><a href="#非扁平的-node-modules-目录" class="headerlink" title="非扁平的 node_modules 目录"></a>非扁平的 node_modules 目录</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;快速、节省磁盘空间的软件包管理器&lt;/p&gt;
&lt;h3 id=&quot;节省磁盘空间&quot;&gt;&lt;a href=&quot;#节省磁盘空间&quot; class=&quot;headerlink&quot; title=&quot;节省磁盘空间&quot;&gt;&lt;/a&gt;节省磁盘空间&lt;/h3&gt;&lt;h4 id=&quot;软链接&quot;&gt;&lt;a href=&quot;#软链接&quot; class</summary>
      
    
    
    
    <category term="Tools" scheme="http://mietl.github.io/categories/Tools/"/>
    
    
    <category term="pnpm" scheme="http://mietl.github.io/tags/pnpm/"/>
    
    <category term="包管理" scheme="http://mietl.github.io/tags/%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>2023 没有记忆的一年</title>
    <link href="http://mietl.github.io/2023/12/19/dear_diary/2023-12-19/"/>
    <id>http://mietl.github.io/2023/12/19/dear_diary/2023-12-19/</id>
    <published>2023-12-19T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="515589cd0839119e93bfdcf45d4effd4312ae9091791092adef640e14eda088e">f821c1cd86e92e41916e027feb9b5da24c265221cda2337d79a4fe8a78074e9b5aba980111f86bd539b3d732e340bbc8999dbd7f64e10b080faa137ec32f4564cf92ac0fa344b95cdd97966dc9b9ea389917132e0d2ae9ae9130b86d3175d8c6d1367c1d5d53475fee6286bffc2586d81441f8aeb675f83fdd60732bbfacab9928fc204b8017dfdbe1937a98d7941ca696a880a815b83815f9c3eadfaa71366344cf3e4c11d62ff721c2ee8849f9cc0a4686f7db8935c965904f2dc7adf433d3474e3183591ab46377b1c484ab071856aaf84493f54621f0c52f00bb3dcc2afda73cec33a662a0455a67c191b8e6d525c4f5503181c1728a6aed009b1eee7ac166011a7f914a62810015bedab42ed802bb28cf1eb6d7491d6d672505ebcec50343a79534c7e34d62f48134e878cf16b1beb824a2c0aae60b620b7372352d98d21e94262636cdd71842e6e2c8aef679fc7c791008dea6d74fcde1cee2e9701eb9ce1f45861b4653d0e6c16914ac03a7db3582660a37ad96b9c2b22368bc389e6183bf3f7343e01d8950b5b9bb92d3d21322cc0b9b0181bde3b71b5778b92775936c7fb2ca0639a1774e369391c30c21bcb459dffd16b6a8e4844f8e5845c17b168b9eecdaec2a1f6f90cdb6f6a982ff009bbed6e51dbe5b39454382db58e4ee34</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
    <category term="2023" scheme="http://mietl.github.io/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>签</title>
    <link href="http://mietl.github.io/2023/11/25/open-links/"/>
    <id>http://mietl.github.io/2023/11/25/open-links/</id>
    <published>2023-11-25T00:05:56.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b59dc8b20e2fdde26f6e1181e072368cdd965552fec8133feb2d52f3043e0ac"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git started</title>
    <link href="http://mietl.github.io/2023/11/21/git/git-started/"/>
    <id>http://mietl.github.io/2023/11/21/git/git-started/</id>
    <published>2023-11-21T08:30:08.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-started"><a href="#Git-started" class="headerlink" title="Git started"></a>Git started</h1><p>Git 学习</p><h2 id="如何开始使用-Git"><a href="#如何开始使用-Git" class="headerlink" title="如何开始使用 Git"></a>如何开始使用 Git</h2><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>当你要做一些提交时，git 需要知道你是谁，因此你需要配置用户名和邮件地址，他会作为你的提交人信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;mietl&quot;</span>. // 设置用户名<br><br>git config --global user.email <span class="hljs-string">&quot;mietl@icolud.com&quot;</span> // 设置你的邮箱<br></code></pre></td></tr></table></figure><p>使用<code>—global</code>选项后、他将保存到你的系统中，你只需要执行一次。</p><p>添加后你可以使用 <code>git config --list </code>进行查看，你也可以在其他地方配置获取查看他们</p><ul><li><strong>&#x2F;etc&#x2F;.gitconfig</strong><br>系统上所有用户的通用配置 使用 <code>git config </code> 命令时添加<code>—system</code>选项，他会读写这个文件</li><li><strong>.git&#x2F;.gitconfig</strong><br>当前仓库的 .<code>git</code>目录 ,用于当前仓库配置</li><li><strong>~&#x2F;.gitconfig</strong><br>当前用户的 git 配置，操作系统是多用户的,传递<code> —local</code>选项，读写此文件</li></ul><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>通过<code>git init </code>初始化一个仓库用来管理当前项目, 执行后，当前目录下会创建.git 隐藏文件夹。</p><p>默认情况下 git 并不会将你的文件添加到 Git 仓库中，当前仓库还是只是一个空仓库，项目中的文件还未被跟踪，因此你需要手动添加。</p><p>你可以通过<code>git add index.js </code> 来跟踪某个文件的 他会被添加到暂缓区。</p><blockquote><p>暂缓区你可以理解为一个临时放东西的区域</p></blockquote><p>如果你跟踪了某个文件，修改后需要重新添加到<code>暂缓区</code>中 可以使用<code>git add . </code>将所有文件添加到<code>暂缓区</code>中</p><p>对于已经存在的仓库，通过 <code>git clone</code>命令 它会将完整的仓库克隆过来包含历史提交记录</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/meitl.git<br></code></pre></td></tr></table></figure><h4 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h4><p>已跟踪的文件，具有不同状态</p><ul><li><code>staged</code> 已经添加到缓存区了</li><li><code>unmodified</code></li><li><code>modifed</code> 修改文件后的状态</li></ul><p>通过 <code>git status</code> 查看文件状态</p><p><img src="/images/git/status.jpg"></p><blockquote><p>Untracked files 表示未跟踪的文件</p></blockquote><p>查看更简洁的状态信息</p><p><code>git status —short</code> 也可以将<code>short</code> 简写为<code>-s </code></p><hr><h4 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h4><p>如果你不希望某些文件被上传，创建 <code>.gitignore</code>文件<br>定义一些排除规则，该文件指定的文件或者目录，将不会被 git 跟踪</p><h4 id="文件提交"><a href="#文件提交" class="headerlink" title="文件提交"></a>文件提交</h4><p>将把文件都提交到暂缓区后，通过<code>git commit 命令进行</code>提交，添加 -m 参数 添加你本次提交到信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;hhhh&quot;</span><br></code></pre></td></tr></table></figure><p>通-a 参数可以将所有文件添加到暂存区中省略<code>git add .</code>的步骤</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git commit -a -m <span class="hljs-string">&quot;提交说明&quot;</span><br></code></pre></td></tr></table></figure><hr><h4 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h4><p>使用 <code>git log</code> 他会列出所有的历史提交信息<br>包含 SHA-1 校验和(每次提交的唯一标识)、作者的名字和电子邮件地址、提交时间以及提交说明</p><p>查看更加直观的信息<code>git log --pretty=oneline</code><br>当存在分支 <code>git log --pretty=oneline --grap</code> 更易于查看</p><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><p>HEAD 是当前分支的指针，他记录着当前处于的版本<br>默认他指向该分支的最后一次提交，你可以通过修改他</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git reset --hard HEAD^  // ^上一版本  ^^上一个版本的前一个版本<br><br>git reset --hard HEAD~n   // 回退至前多少次版本<br><br>git reset --hard 7256f72b  // 指定回退至某次提交 commitId;<br></code></pre></td></tr></table></figure><h4 id="远程仓库验证"><a href="#远程仓库验证" class="headerlink" title="远程仓库验证"></a>远程仓库验证</h4><p>你可以通过两种方式对远程仓库进行连接</p><p>当需要对私有仓库进行操作时，Git 服务器需要知道你是谁</p><ol><li>通过 SSH 密钥验证</li></ol><p>通过执行命令生成公钥和私钥</p><figure class="highlight 1c"><table><tr><td class="code"><pre><code class="hljs 1c">ssh-keygen -t ed25519 -C “you email<span class="hljs-string">&quot;       // 通过-C添加注释</span><br></code></pre></td></tr></table></figure><p>你也可以采用不同的加密方式 ，只要 Git 服务器支持</p><figure class="highlight 1c"><table><tr><td class="code"><pre><code class="hljs 1c">ssh-keygen -t rsa -b <span class="hljs-number">2048</span> -C “hhh<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p>生成后在你用户文件(&#x2F;Users&#x2F;用户名&#x2F;.ssh)下会产生.ssh 隐藏目录</p><p><img src="/images/git/ssh.jpg"></p><p>后缀名.pub 为公钥文件，将内容配置到 Git 服务器中<br><img src="/images/git/ssh_key.png"></p><p>配置后，在进行提交时，Git 会读取你的私钥文件，与你的帐户配置公钥进行验证。</p><h4 id="与远程仓库建立连接"><a href="#与远程仓库建立连接" class="headerlink" title="与远程仓库建立连接"></a>与远程仓库建立连接</h4><p>默认情况下通过 git clone 命令下载的代码，是已经与远程仓库进行连接的</p><p>当你初始化一个仓库时，如果你需要管理远程仓库</p><p>添加远程地址，让本地仓库和远程仓库建立连接</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git remote add &lt;name&gt; &lt;url&gt;<br>git remote add origin  https://github.com/mietl/TBlog.git<br></code></pre></td></tr></table></figure><p>添加后 通过<code>git remove</code> 命令查看当前建立的远程连接地址<br>使用<code>-v</code>参数 可以查看更详细的信息<br><img src="/images/git/remote_v.jpg"></p><p>重命名</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git remote rename origin blog<br></code></pre></td></tr></table></figure><p>删除远程地址</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git remote remove blog<br></code></pre></td></tr></table></figure><h4 id="Git-标签"><a href="#Git-标签" class="headerlink" title="Git 标签"></a>Git 标签</h4><p>当提交历史过多时，如果你想快速找到历史提交中的某次重要版本，你可以为他添加标签</p><p>创建标签</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git tag v1.0.0<br></code></pre></td></tr></table></figure><p>在标签上添加一些附注信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git tag -a v1.0.1 -m <span class="hljs-string">&#x27;fixes&#x27;</span><br></code></pre></td></tr></table></figure><p>将标签上传到远程创建中</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git push origin v1.0.0<br></code></pre></td></tr></table></figure><p>上传所有 tags</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git push origin --tags<br></code></pre></td></tr></table></figure><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><ol><li>问题一: 本地分支的上游分支（跟踪分支）</li></ol><p><strong>重现步骤</strong></p><p>在使用<code>git init</code>创建本地仓库后，添加远程仓库连接后<br>执行<code>git pull</code>命令时，会产生<br><img src="/images/git/issue1.png"></p><blockquote><p>git pull 是 git fetch 与 git merge 的结合</p></blockquote><p>原因是<code>git pull 在执行 merge</code>的过程中，由于 Git 存在分支的概念，他并不知道你要合并那条分支<br>你可以明确指定 <code>git pull origin main</code> 具体要合并的分支，但这样在进行 push 操作时也需要明确指定</p><p>你可能会觉得太麻烦，提示中还有另外一个解决方案。</p><p>你可以通过执行下面命令设置本地分支与远程分支的跟踪关系</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch --set-upstream-to=origin/main main<br><span class="hljs-comment"># 最后 main可以省略，默认他会设置当前所在的分支</span><br></code></pre></td></tr></table></figure><p>将当前分支指定上游分支 为远程的 main 分支，指定后 Git 就能知道跟踪是那条分支</p><ol start="2"><li>问题二: 拒绝合并不相干的提交历史 *<em>重现步骤</em><br>通过 Git 服务器创建好远程仓库，添加 README.md 后，<br>创建本地仓库连接远程服务器，合并远程服务器上的 README.md 文件会产生<br><img src="/images/git/issue2.jpg"></li></ol><p>在执行<code>git merge</code>命令时，如果你的远程仓库有提交历史了(已经存在文件了)</p><p>产生原因: Git 默认不允许两个不相干历史进行合并、（没有同一个基础分支历史）<br>如果你依旧想进行合并 添加<code>allow-unrelated-histories</code>参数 来允许提交不相关的提交历史</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git merge --allow-unrelated-histories<br></code></pre></td></tr></table></figure><p>参考链接 <a href="https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase">https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase</a></p><blockquote><p>如果你通过 git clone 项目进行操作的话，可以绕过问题 1 和问题 2，git clone 默认会存在上游分支，克隆下来也存在相关历史</p></blockquote><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ol><li>命名别名 <code>git config —global alias.br branch</code></li></ol><h4 id="集中式版本控制与分布式版本控制的区别？"><a href="#集中式版本控制与分布式版本控制的区别？" class="headerlink" title="集中式版本控制与分布式版本控制的区别？"></a>集中式版本控制与分布式版本控制的区别？</h4><p><strong>集中式版本控制</strong>： 只在服务器中保存了代码提交的历史记录<br><strong>分布式版本控制</strong>： 客户端与服务器中都有保存完整的历史记录， 在进行克隆操作时会对仓库代码进行完整备份，包括历史记录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git-started&quot;&gt;&lt;a href=&quot;#Git-started&quot; class=&quot;headerlink&quot; title=&quot;Git started&quot;&gt;&lt;/a&gt;Git started&lt;/h1&gt;&lt;p&gt;Git 学习&lt;/p&gt;
&lt;h2 id=&quot;如何开始使用-Git&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="Git" scheme="http://mietl.github.io/categories/Git/"/>
    
    
    <category term="Git" scheme="http://mietl.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 学习</title>
    <link href="http://mietl.github.io/2023/11/16/ts/ts-docs/"/>
    <id>http://mietl.github.io/2023/11/16/ts/ts-docs/</id>
    <published>2023-11-16T20:36:30.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<p>TS 是一个可选的静态的类型系统</p><h2 id="如何进行类型约束"><a href="#如何进行类型约束" class="headerlink" title="如何进行类型约束"></a>如何进行类型约束</h2><p>通过在变量、函数参数、函数返回值 位置加上<code>变量名:类型</code>进行标注</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">"mietl"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params">n: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span> {<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">number</span>;<br>}<br><br>name = <span class="hljs-number">2214</span>; <span class="hljs-comment">// error</span><br></code></pre></td></tr></table></figure><p>添加类型约束后，再进行赋时<code>name=2214</code> <strong>ts 编译器</strong>会进行类型检查，变量要求为 <code>string</code> 类型，但接收到的为<code>number</code>，当检查出错误时他会提示报错</p><p><img src="/images/ts/tscheck.jpg"></p><h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><ol><li><p><strong>number</strong></p></li><li><p><strong>string</strong></p></li><li><p><strong>boolean</strong></p></li><li><p><strong>array</strong></p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 定义数组的两种方式</span><br><span class="hljs-keyword">let</span> <span class="hljs-attr">arr</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">nums</span>: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>];<br></code></pre></td></tr></table></figure></li><li><p><strong>null 和 undefined</strong></p><p>undefined 和 null 可以作为其他类型的子类型，他们可以赋值给其他类型</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> name = <span class="hljs-string">"mietl"</span>;<br><br>name = <span class="hljs-literal">undefined</span>;<br><br>name = <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><p>在<code>tsconfig.json</code>中 添加<code>strictNullChecks:true</code>,可以使用更严格的空类型检查，启用后 null 和 undefined 只能赋值给自身。</p></li><li><p><strong>object</strong></p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params">obj: <span class="hljs-built_in">object</span>, key: <span class="hljs-built_in">string</span></span>) {<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">object</span>.<span class="hljs-title function_">hasOwnProperty</span>(key));<br>}<br></code></pre></td></tr></table></figure></li></ol><h4 id="其他类型"><a href="#其他类型" class="headerlink" title="其他类型"></a>其他类型</h4><ol><li><p><strong>联合类型</strong><br>多种类型的联合，满足任意一种类型即可</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> <span class="hljs-attr">gender</span>: <span class="hljs-string">"male"</span> | <span class="hljs-string">"famale"</span>;<br></code></pre></td></tr></table></figure></li><li><p><strong>void</strong><br>表示没有返回值。当函数没有明确指定返回值类型或者返回类型被指定为<code>void</code>时，该函数被认为不返回任何值。</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">print</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">void</span> {<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"hhh"</span>);<br>}<br></code></pre></td></tr></table></figure></li><li><p><strong>never</strong><br>表示永远不会发生赋值的类型</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">loop</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">never</span> {<br>  <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"loop"</span>);<br>  }<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">throwErr</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">never</span> {<br>  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>();<br>}<br><br><span class="hljs-comment">// 实际应用</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">format</span>(<span class="hljs-params">value: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span></span>) {<br>  <span class="hljs-keyword">switch</span> (<span class="hljs-keyword">typeof</span> value) {<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">"string"</span>:<br>      value.<span class="hljs-title function_">toLowerCase</span>();<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">"number"</span>:<br>      value.<span class="hljs-title function_">toFixed</span>();<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-attr">default</span>:<br>      <span class="hljs-comment">// 以上类型都列举完,永远不会执行赋值当操作,才能将value赋值为never类型</span><br>      <span class="hljs-comment">// 当类型没有进行具体的实现，有可能来到default时,检查将失败，无法将值赋值给naver类型的变量</span><br>      <span class="hljs-keyword">const</span> <span class="hljs-attr">check</span>: <span class="hljs-built_in">never</span> = value;<br>  }<br>}<br><span class="hljs-comment">// 利用这点可以约束，value可能的值类型，必须经过case</span><br></code></pre></td></tr></table></figure></li><li><p><strong>字面量类型</strong><br>使用一个值进行约束</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Alignment</span> = <span class="hljs-string">"left"</span> | <span class="hljs-string">"right"</span> | <span class="hljs-string">"center"</span>;<br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">align</span>: <span class="hljs-title class_">Alignment</span> = <span class="hljs-string">"left"</span>;<br></code></pre></td></tr></table></figure></li><li><p><strong>any 类型</strong><br>任意类型，any 类型可以绕过类型检查，因此 any 类型的数据可以赋值给任意类型</p><figure class="highlight typescript"><table><tr><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>:<span class="hljs-built_in">any</span> = <span class="hljs-string">"mietl"</span>;<br><br><span class="hljs-keyword">let</span> <span class="hljs-attr">num</span>:<span class="hljs-built_in">number</span> = name;<br></code></pre></td></tr></table></figure></li><li><p><strong>元祖类型</strong><br>固定长度，并且数组的每一项类型都确定,通常被用作返回值</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> <span class="hljs-attr">tuple</span>: [<span class="hljs-built_in">number</span>, <span class="hljs-built_in">string</span>] = [<span class="hljs-number">1</span>, <span class="hljs-string">"a"</span>];<br></code></pre></td></tr></table></figure><p>错误示例</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params">n: <span class="hljs-built_in">number</span></span>) {<br>  <span class="hljs-keyword">let</span> arr = [n, <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(n)];<br>  <span class="hljs-keyword">return</span> arr;<br>}<br><span class="hljs-keyword">const</span> [num, charCode] = <span class="hljs-title function_">foo</span>(<span class="hljs-number">65</span>);<br><span class="hljs-comment">// &gt; 错误 无法确定charCode为String类型</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(charCode.<span class="hljs-property">length</span>);<br></code></pre></td></tr></table></figure><p>作为返回值类型使用</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params">n: <span class="hljs-built_in">number</span></span>) {<br>  <span class="hljs-keyword">let</span> <span class="hljs-attr">tuple</span>: [<span class="hljs-built_in">number</span>, <span class="hljs-built_in">string</span>] = [n, <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(n)];<br>  <span class="hljs-keyword">return</span> tuple;<br>}<br><br><span class="hljs-keyword">const</span> [num, charCode] = <span class="hljs-title function_">foo</span>(<span class="hljs-number">65</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num, charCode.<span class="hljs-property">length</span>);<br></code></pre></td></tr></table></figure></li></ol><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h4 id="类型推导"><a href="#类型推导" class="headerlink" title="类型推导"></a>类型推导</h4><p>类型推导的特性，能自动推测到出变量的类型，在某些情况下你可以省略类型标注。</p><p>当你的值为字符串类型的他能直接识别</p><p><img src="/images/ts/ts_6133.jpg"></p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">n1: <span class="hljs-built_in">number</span>, n2: <span class="hljs-built_in">number</span></span>) {<br>  <span class="hljs-keyword">return</span> n1 + n2;<br>}<br><br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><p>上述代码中<code>sum </code>函数中参数都为<code>number</code>类型，返回值<code>n1 + n2 </code>两个<code>number</code>的数值在进行相加后返回值一定是<code>number</code>类型,</p><p>因此 <code>sum</code>的返回值类型标注 可以省略，返回值推导为<code>number</code>类型，在进行赋值时，<code>total</code>类型推导为<code>number</code>类型</p><h4 id="类型缩小-narrowing"><a href="#类型缩小-narrowing" class="headerlink" title="类型缩小(narrowing)"></a>类型缩小(narrowing)</h4><p>当对某个变量进行类型判断之后，在判断的语句块中 ts 就已经可以确定它的类型，typeof 可以触发类型缩小。</p><h4 id="非空断言"><a href="#非空断言" class="headerlink" title="非空断言"></a>非空断言</h4><h4 id="类型断言"><a href="#类型断言" class="headerlink" title="类型断言"></a>类型断言</h4><h4 id="类型别名"><a href="#类型别名" class="headerlink" title="类型别名"></a>类型别名</h4><p>当类型在多处要被使用时，如果每个地方都单独写一遍，不利于维护扩展，如果某天对这个类型添加新属性时，需要每个地方都进行修改，可以通过类型别名都方式，为类型定义名称</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">typeof</span> <span class="hljs-title class_">User</span> = {<br>  <span class="hljs-attr">name</span>:<span class="hljs-built_in">string</span><br>  <span class="hljs-attr">age</span>:<span class="hljs-built_in">number</span>,<br>}<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">user</span>:<span class="hljs-title class_">User</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getUserName</span>(<span class="hljs-params">u:User</span>)<br></code></pre></td></tr></table></figure><h2 id="函数相关约束"><a href="#函数相关约束" class="headerlink" title="函数相关约束"></a>函数相关约束</h2><h4 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h4><p>在函数实现之前，对函数调用对多种情况进行声明</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">string</span>, b: <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">number</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>, b: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">number</span> {<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> a == <span class="hljs-string">"string"</span> &amp;&amp; <span class="hljs-keyword">typeof</span> b == <span class="hljs-string">"string"</span>) {<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-property">length</span> + b.<span class="hljs-property">length</span>;<br>  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> a == <span class="hljs-string">"number"</span> &amp;&amp; <span class="hljs-keyword">typeof</span> b == <span class="hljs-string">"number"</span>) {<br>    <span class="hljs-keyword">return</span> a + b;<br>  }<br>}<br><br><span class="hljs-comment">// 在调用方法时，根据会上面重载声明，进行匹配，只有存在声明对组合才能进行调用</span><br><span class="hljs-keyword">let</span> len = <span class="hljs-title function_">add</span>(<span class="hljs-string">"mietl"</span>, <span class="hljs-string">"t"</span>);<br><span class="hljs-keyword">let</span> num = <span class="hljs-title function_">add</span>(<span class="hljs-number">124</span>, <span class="hljs-number">124</span>);<br><br><span class="hljs-keyword">let</span> test = <span class="hljs-title function_">add</span>(<span class="hljs-string">"123"</span>, <span class="hljs-number">2323</span>); <span class="hljs-comment">// error</span><br></code></pre></td></tr></table></figure><h4 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h4><p>在参数名后加上问号，表示该参数可以不用传递。可选参数必须在必选的后面</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span>, c: <span class="hljs-built_in">number</span>?</span>) {<br>  <span class="hljs-keyword">if</span> (c) {<br>    <span class="hljs-keyword">return</span> a + b + c;<br>  }<br>  <span class="hljs-keyword">return</span> a + b;<br>}<br><br><span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br><span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>);<br></code></pre></td></tr></table></figure><blockquote><p>可选参数实际是 number | undefined 组合的联合类型，在 JavaScript 中未指定的参数会得到 undefined</p></blockquote><h4 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h4><p>用于约束一个变量的取值范围</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> level {<br>  lv1,<br>  lv2,<br>  lvMax,<br>}<br><br><span class="hljs-keyword">let</span> l = level.<span class="hljs-property">lv1</span>;<br>l = level.<span class="hljs-property">lv2</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPermissions</span>(<span class="hljs-params">l: level</span>) {}<br></code></pre></td></tr></table></figure><p><strong>提问</strong>: 字面量配合联合类型也能达到相同效果，为什么要存在枚举？</p><p>字面量类型无法解决的问题</p><ol><li><p>在类型约束位置，会产生重复代码。（可以配合类型别名解决该问题）</p></li><li><p>字面量类型不会进入到编译结果。而枚举会存在于编译结果中，要想在代码中动态输出所有值的范围，字面量无法做到</p></li><li><p>逻辑含义和真实值没有分开，会导致修改真实值的时候产生大量修改</p></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Sex</span> = <span class="hljs-string">'male'</span> | <span class="hljs-string">'famle'</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getUserBySex</span>(<span class="hljs-params">sex:Sex</span>){}<br><br><span class="hljs-keyword">let</span> s = <span class="hljs-string">'famle'</span><br><span class="hljs-keyword">if</span>(s == <span class="hljs-string">'male'</span>){}<br><br><span class="hljs-title function_">getUserBySex</span>(<span class="hljs-string">'male'</span>);<br></code></pre></td></tr></table></figure><p>假设某天 sex 的真实值要改为 <code>0 跟 1</code>,如果多处其他地方使用 sex 时，由于判断的是真实的值，会导致多处地方需要修改</p><p>而枚举刚好做了这点，将逻辑含义，与真实值区分开。</p><p>修改代码为，当真实值需要改变时，修改枚举值即可，其他地方保存不变</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Sex</span> {<br>  <span class="hljs-attr">male</span>:<span class="hljs-string">'male'</span>,<br>  <span class="hljs-attr">famle</span>:<span class="hljs-string">'famle'</span><br>}<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getUserBySex</span>(<span class="hljs-params">sex:Sex</span>){ }<br><br><span class="hljs-keyword">if</span>(sex == <span class="hljs-title class_">Sex</span>.<span class="hljs-property">male</span>){}<br><br><span class="hljs-title function_">getUserBySex</span>(<span class="hljs-title class_">Sex</span>.<span class="hljs-property">male</span>);<br></code></pre></td></tr></table></figure><p>枚举在编译结果中表现为对象</p><p>枚举的值可以是数字或字符串</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span>{<br>  <span class="hljs-attr">LEFT</span>:<span class="hljs-string">'A'</span>,<br>  <span class="hljs-attr">TOP</span>:<span class="hljs-string">'W'</span>,<br>  <span class="hljs-attr">RIGHT</span>:<span class="hljs-string">'D'</span>,<br>  <span class="hljs-attr">BOTTOM</span>:<span class="hljs-string">'S'</span><br>}<br></code></pre></td></tr></table></figure><h5 id="数字枚举"><a href="#数字枚举" class="headerlink" title="数字枚举"></a>数字枚举</h5><p>如果是数字枚举，值会自动递增</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Num</span>{<br>  a = <span class="hljs-number">1</span>,<br>  b,<br>  c<br>}<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b) <span class="hljs-comment">// 2</span><br></code></pre></td></tr></table></figure><blockquote><p>被数字枚举约束的变量，可以直接赋值为数字。<br>使用枚举时，最好使用枚举字段的名称，而不使用真实的值</p></blockquote><h4 id="结合枚举进行位运算"><a href="#结合枚举进行位运算" class="headerlink" title="结合枚举进行位运算"></a>结合枚举进行位运算</h4><blockquote><p>位运算：两个数字换算成二进制进行运算</p></blockquote><p>功能: 权限的定义、权限组合、权限判断和权限删除</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Permission</span> {<br>  <span class="hljs-title class_">Read</span> = <span class="hljs-number">1</span>, <span class="hljs-comment">// 0001</span><br>  <span class="hljs-title class_">Write</span> = <span class="hljs-number">2</span>,<span class="hljs-comment">// 0010</span><br>  <span class="hljs-title class_">Create</span> = <span class="hljs-number">4</span>, <span class="hljs-comment">// 0100</span><br>  <span class="hljs-title class_">Delete</span> = <span class="hljs-number">8</span> <span class="hljs-comment">// 1000</span><br>}<br></code></pre></td></tr></table></figure><ol><li><p><strong>如何组合权限</strong></p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> p = <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Read</span> | <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Write</span>;<br></code></pre></td></tr></table></figure><p>或运算: 如果一个为1，则为1，否则为0<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.563ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19254.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1225,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1754,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mtd" transform="translate(2274,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(4631.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5082.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5427.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5788.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mtd" transform="translate(8806.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(4583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mo" transform="translate(5583.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5972.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(6475.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mtd" transform="translate(15671.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g></g></g></g></g></g></svg></mjx-container><br>得出的结果，就已经包含Read与Write了</p></li><li><p><strong>如何判断是否拥有某个权限</strong><br>与运算: 两个都为1，则结果为1，否则为0。</p></li></ol><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="40.316ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 17819.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mtd" transform="translate(503,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(4342.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4808.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5337.6,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mtd" transform="translate(6638.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(4583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mo" transform="translate(5583.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5972.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g><g data-mml-node="mtd" transform="translate(13140.1,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(429,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mtd" transform="translate(14236.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g></g></g></g></g></g></svg></mjx-container></p><p>如果与运算结果与b结果相等，说明具备该权限</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isPermission</span>(<span class="hljs-params">target: Permission, p: Permission</span>) {<br>  <span class="hljs-keyword">return</span> (target &amp; p) == p<br>}<br><br><span class="hljs-comment">// 是否有创建权限</span><br><span class="hljs-title function_">isPermission</span>(p, <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Create</span>) <span class="hljs-comment">// false</span><br><br><span class="hljs-title function_">isPermission</span>(p, <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Write</span>) <span class="hljs-comment">// &gt; true</span><br><span class="hljs-comment">// 是否有读写权限 </span><br><span class="hljs-title function_">isPermission</span>(p, <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Read</span> | <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Write</span>) <span class="hljs-comment">// &gt; true</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>如何删除权限</strong><br>异或：相同为0 不同为1</li></ol><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.173ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19082.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><g data-mml-node="mtd" transform="translate(503,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(4342.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(4808.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5337.6,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mtd" transform="translate(6638.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(3583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(4583.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="mi" transform="translate(5583.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mtext" transform="translate(6086.6,0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g><g data-mml-node="mi" transform="translate(6586.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(7345.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(7811.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8340.6,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mtd" transform="translate(15499.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1333.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path></g><g data-mml-node="mtext" transform="translate(3333.6,0)"><path data-c="A0" d=""></path></g></g></g></g></g></g></svg></mjx-container></p><p>结果中就已经Read对应位被去除</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts">p = p ^ <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Write</span>;<br><span class="hljs-title function_">isPermission</span>(p, <span class="hljs-title class_">Permission</span>.<span class="hljs-property">Write</span>)  <span class="hljs-comment">// &gt; false</span><br></code></pre></td></tr></table></figure><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><p>建议使用同一种模块化标准进行导入导出</p><h4 id="配置编译结果中所使用的模块化标准"><a href="#配置编译结果中所使用的模块化标准" class="headerlink" title="配置编译结果中所使用的模块化标准"></a>配置编译结果中所使用的模块化标准</h4><p>在<a href="https://www.typescriptlang.org/tsconfig#module">tsconfig.json</a>中 编译选项中设置 <code>module: CommonJS</code> 或其他标准</p><blockquote><p>被允许的值有 none、commonjs、amd 、umd 、 system 、<br>es6/es2015 、es2020 、es2022 、esnext、node16 、nodenext</p></blockquote><p>编写ES模块化代码，指定 <code>ES6</code> 模块化标准 编译结果无区别</p><p>编写ES模块化代码，指定 <code>CommonJS</code> 模块化标准, 导出的声明会变为 <code>exports</code> ，默认导出将复制给<code>exports</code> 的 <code>default</code> 属性<br><img src="/images/ts/commonjs.png"></p><h4 id="通过esModule导入commonjs时的错误"><a href="#通过esModule导入commonjs时的错误" class="headerlink" title="通过esModule导入commonjs时的错误"></a>通过esModule导入commonjs时的错误</h4><p>通过esModule进行导入commonjs模块导出时，提示报错<br><img src="/images/ts/import_commonjs.png"></p><p>commonjs导出语法并不会提供、default属性</p><h5 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h5><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> { readFileSync } <span class="hljs-keyword">from</span> <span class="hljs-string">'fs'</span>;<br><span class="hljs-comment">// 或</span><br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> fs  <span class="hljs-keyword">from</span> <span class="hljs-string">'fs'</span>;<br></code></pre></td></tr></table></figure><h5 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h5><figure class="highlight fortran"><table><tr><td class="code"><pre><code class="hljs fortran"><span class="hljs-keyword">module</span>.exports = {<br> foo,<br> <span class="hljs-keyword">name</span><br>}<br></code></pre></td></tr></table></figure><p>可以通过启用 <code>"esModuleInterop": true</code>,启用es模块化交互非es模块导入、他会将在编译结果中生成函数、将其他标准导出转化为ES6模块化能识别的导入</p><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// tsconfig.json</span><br><span class="hljs-punctuation">{</span><br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">"compilerOptions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"esModuleInterop"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></table></figure><h4 id="在ts中使用commonjs规范"><a href="#在ts中使用commonjs规范" class="headerlink" title="在ts中使用commonjs规范"></a>在ts中使用commonjs规范</h4><p>导出</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// common.ts</span><br><span class="hljs-keyword">export</span> = {<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">"mietl"</span>,<br>  <span class="hljs-title function_">sum</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>) {<br>    <span class="hljs-keyword">return</span> a + b;<br>  }<br>}<br><br></code></pre></td></tr></table></figure><p>导入</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">//index.ts</span><br><span class="hljs-keyword">const</span> mod = <span class="hljs-built_in">require</span>(<span class="hljs-string">'./common'</span>)<br></code></pre></td></tr></table></figure><p>使用这种方式导入，无法获取类型检查，<code>mod</code>得到的类型为any</p><p>如果要得到类型检查就必须遵守TS的要求进行编写</p><p>使用这种方式进行导出</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// common.ts</span><br><span class="hljs-keyword">export</span> = {<br>  <span class="hljs-attr">name</span>:<span class="hljs-string">'mietl'</span><br>}<br></code></pre></td></tr></table></figure><p>导入</p><figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> mod <span class="hljs-keyword">from</span>  <span class="hljs-string">'./common.ts'</span> <span class="hljs-comment">// esModuleInterop true</span><br><span class="hljs-comment">// 或</span><br><span class="hljs-keyword">import</span> mod = <span class="hljs-built_in">require</span>(<span class="hljs-string">'./common.ts'</span>);<br></code></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h4 id="类型兼容性"><a href="#类型兼容性" class="headerlink" title="类型兼容性"></a>类型兼容性</h4><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><p>​</p><h2 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h2><p><strong>version: 5.2.2</strong></p><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>  <span class="hljs-attr">"compilerOptions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-comment">// 配置编译选项</span><br>    <span class="hljs-attr">"target"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"es2016"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 编译后代码的标准</span><br>    <span class="hljs-attr">"lib"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">"es2016"</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"moduleResolution"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"node10"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 设置寻找模块的模式 ，模块解析策略</span><br>    <span class="hljs-attr">"module"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"CommonJS"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 配置编译使用的模块化标准</span><br>    <span class="hljs-attr">"removeComments"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 移除编译结果中的注释</span><br>    <span class="hljs-attr">"esModuleInterop"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"noEmitOnError"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 产生错误时，是否编译结果 </span><br>    <span class="hljs-attr">"types"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">"node"</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"rootDir"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./src"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"outDir"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./dist"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;TS 是一个可选的静态的类型系统&lt;/p&gt;
&lt;h2 id=&quot;如何进行类型约束&quot;&gt;&lt;a href=&quot;#如何进行类型约束&quot; class=&quot;headerlink&quot; title=&quot;如何进行类型约束&quot;&gt;&lt;/a&gt;如何进行类型约束&lt;/h2&gt;&lt;p&gt;通过在变量、函数参数、函数返回值 位置加上&lt;</summary>
      
    
    
    
    <category term="TypeScript" scheme="http://mietl.github.io/categories/TypeScript/"/>
    
    
    <category term="前端" scheme="http://mietl.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Git branch</title>
    <link href="http://mietl.github.io/2023/11/13/git/git-branch/"/>
    <id>http://mietl.github.io/2023/11/13/git/git-branch/</id>
    <published>2023-11-13T22:15:08.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<p>Git 分支学习</p><h2 id="Git-分支"><a href="#Git-分支" class="headerlink" title="Git 分支"></a>Git 分支</h2><p>Git 的分支 是指向提交对象的可变指针</p><blockquote><p>HEAD 指向当前分支</p></blockquote><p>你可以创建多个分支，在不同分支上进行提交</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">t1 -&gt; t2  -&gt; t3 (main)<br><br>t1 -&gt; t2   (dev)<br></code></pre></td></tr></table></figure><p>可以很方便在不同的分支中进行开发</p><p><code>main</code> 分支，在进行每次提交后， 他都会指向最后一次提交对象，当你在 <code>mian</code> 分支中进行操作时，<code>dev</code> 不会受影响，<code>dev</code> 依然指向 <code>t2</code>不变</p><p>因此你也可以切换到 dev 中做不同事情</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">t1 -&gt; t2 -&gt; t4 (dev)<br></code></pre></td></tr></table></figure><p><strong>创建分支</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch dev<br></code></pre></td></tr></table></figure><p><strong>查看所有分支</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch<br></code></pre></td></tr></table></figure><p><strong>切换分支</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git checkout dev<br></code></pre></td></tr></table></figure><p><strong>创建 dev 并切换到 dev 分支</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git checkout -b dev<br></code></pre></td></tr></table></figure><p><strong>删除分支</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch -d dev<br>git branch -D dev  // 强制删除<br></code></pre></td></tr></table></figure><p>查看当前分支与最后一次提交</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch -v<br></code></pre></td></tr></table></figure><h2 id="分支的作用"><a href="#分支的作用" class="headerlink" title="分支的作用"></a>分支的作用</h2><p>例入在开发项目时，开发完小目标功能后，添加 <code>tag</code>进行标记 ，想进行新功能的开发，开发过程中，原先的 tag 版本出现问题，你就可以切换到 tag 版本创建分支完成修复。</p><p>修复后发布新版本，等新功能开发好后，使用 <code> git merge branch-name</code>进行合并</p><h2 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h2><p>远程分支也是一种分支结构，和普通的分支一样，只不过在远程</p><p>本地仓库与远程仓库建立连接后,设置上游分支后</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git branch --set-upstream-to=origin/main<br></code></pre></td></tr></table></figure><p>错误 <strong><u>fatal: the requested upstream branch ‘origin&#x2F;main’ does not exist</u></strong></p><p><img src="/images/git/fatal.png"></p><p>这是因为目前只是与远程仓库建立了的连接，远程仓库中有哪些分支还不知道</p><p>通过<code>git fetch</code>命令来获取最新的远程分支，</p><p><img src="/images/git/fetch-branch.png"></p><p>这样本地就有 <code>origin/main</code> 的分支了</p><h4 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a>推送分支</h4><p>在创建某个分支后，需要共享他时，通过 <code>git push &lt;remote&gt; &lt;branch&gt;</code>推送到远程</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git push origin dev<br></code></pre></td></tr></table></figure><h4 id="跟踪远程分支"><a href="#跟踪远程分支" class="headerlink" title="跟踪远程分支"></a><strong>跟踪远程分支</strong></h4><blockquote><p>当克隆一个仓库时，会自动创建一个跟踪了 origin&#x2F;main 的本地分支 main</p></blockquote><p>在你创建了本地分支 main 如果想跟踪远程分支，可以通过执行</p><figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">git checkout --track <span class="hljs-tag">&lt;<span class="hljs-name">remote</span>&gt;</span>/<span class="hljs-tag">&lt;<span class="hljs-name">branch</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过<code>git clone</code> 下来项目时，本地分支中只会包含 main 分支，当想切换到其他远程分支</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git checkout --track origin/test<br></code></pre></td></tr></table></figure><p>该命令执行后会先去查看远程有没有这个分支，有的话就创建一个本地 <code>test</code> 分支，并跟踪远程分支 <code>test</code> 同时切换到 <code>test</code> 分支。</p><p>你也可以直接省略 <code>--track </code>参数 直接切换到远程分支，作用时相同的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git checkout <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p><strong>删除远程分支</strong></p><p>当不需要远程的某个分支时</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git push origin --delete &lt;branch&gt;<br></code></pre></td></tr></table></figure><p>当初始化好本地仓库后，与远程建立连接，远程分支的分支名与本地分支不一致时</p><p>git pull 时拉取代码时，指定上游分支后，提后后</p><p>推送到远程仓库时,产生如下错误,</p><p>本地分支: master<br>远程分支: main</p><p><img src="/images/git/push-default.png"></p><p>这个时候就会有疑问了，明明已经设置了上游分支，为什么还需要指定</p><p>这是由于 git push 推送时的默认行为 , 当 <code>push</code> 时会在远程寻找与本地分支同名的进行推送，没有找到就拒绝推送</p><p>常见的默认行为有一下几种，你可以通过配置来修改他</p><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino">git config push.<span class="hljs-keyword">default</span> upstream<br></code></pre></td></tr></table></figure><p>推送到上游分支，修改后就能正常推送了</p><h4 id="push-default"><a href="#push-default" class="headerlink" title="push.default"></a>push.default</h4><ol><li><p>nothing<br>没有默认行为，除非明确给出了引用 <code>push origin/main</code>，否则拒绝推送</p></li><li><p>current<br>推送当前分支,到远程同名分支、如果不存在则创建</p></li><li><p>upstream<br>将当前分支推送到上游分支</p></li><li><p>simple (2.0 默认值)<br>将当前分支推送到远程具有相同名称的分支。</p></li></ol><p><a href="https://git-scm.com/docs/git-push#_configuration">参考链接</a></p><p>更常见的做法是通过 <code>git checkout --track mian </code> 来跟踪远程仓库</p><p>他会检查远程有没有 <code>main</code> 分支有的话，创建一个本地 <code>main</code> 分支，跟踪远程分支 <code>main</code>,再切换到 <code>main</code> 分支中</p><p>创建一个同名分支再进行操作，这样可以绕过不必要的麻烦。</p><h4 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h4><p>在合并不同分支的方式有两种 <code>git merge</code> 与 <code> git rebase</code></p><p>使用 <code>git rebase</code> 命令你可以将某一分支上的所有修改，移至另外一个分支上， 简单理解就是改变当前分支的<code>base </code></p><p>可以将其想象成在一个分支上的提交拿起来，然后放到另一个分支的最新提交上。</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">git checkout future<br><br>git rebase main<br></code></pre></td></tr></table></figure><p>执行<code>rebase</code>命令 首先会找到<code>future</code>与<code>main</code>分支的共同父提交，将从父提交到 future 分支的所有修改，存储为临时文件，</p><p>以分支 main 为基准，将分支<code>future</code>上的提交一个一个地拿起来，并逐个应用到分支 A 的最新提交上，产生一次<code>future</code>新提交；</p><p>最后回到目标分支 (main) 中进行合并</p><figure class="highlight arduino"><table><tr><td class="code"><pre><code class="hljs arduino">git checkout main<br><br>get merge future<br><br></code></pre></td></tr></table></figure><blockquote><p><strong>TIP:</strong> 当我们执行 <code>rebase</code> 操作时，是在要移动的分支中执行 <code>rebase</code>，而不是在目标分支上执行。</p></blockquote><h3 id="rebase-和-merge-的选择"><a href="#rebase-和-merge-的选择" class="headerlink" title="rebase 和 merge 的选择"></a>rebase 和 merge 的选择</h3><p>使用 rebase 与 merge 会产生不同的 Git 历史记录，该如何进行选择呢？</p><ul><li>使用 <code>git merge</code> 在合并分支时，会产生一次新的提交历史<br><img onerror="imgOnError(this);" data-fancybox="gallery" src="/images/git/merge.png" alt="merge" data-caption="merge" loading="lazy"></li><li>使用 <code>git rebase</code> 直接将另外一个分支的修改复制了过来，并不会产生新的提交，这使历史记录更为简洁，并保持线性<br><img onerror="imgOnError(this);" data-fancybox="gallery" src="/images/git/rebase.png" alt="rebase" data-caption="rebase" loading="lazy"></li></ul><p>你可以根据需要选择不同的合并方式</p><blockquote><p>不建议再主要工作的分支中，使用<code>rebase</code>命令，他会造成一些意外的更改记录</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Git 分支学习&lt;/p&gt;
&lt;h2 id=&quot;Git-分支&quot;&gt;&lt;a href=&quot;#Git-分支&quot; class=&quot;headerlink&quot; title=&quot;Git 分支&quot;&gt;&lt;/a&gt;Git 分支&lt;/h2&gt;&lt;p&gt;Git 的分支 是指向提交对象的可变指针&lt;/p&gt;
&lt;blockquote&gt;
</summary>
      
    
    
    
    <category term="Git" scheme="http://mietl.github.io/categories/Git/"/>
    
    
    <category term="Git" scheme="http://mietl.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>随想</title>
    <link href="http://mietl.github.io/2023/09/15/sui-xiang/"/>
    <id>http://mietl.github.io/2023/09/15/sui-xiang/</id>
    <published>2023-09-15T11:30:02.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最近发生的事一"><a href="#最近发生的事一" class="headerlink" title="最近发生的事一"></a>最近发生的事一</h4><h4 id="最近发生的事二"><a href="#最近发生的事二" class="headerlink" title="最近发生的事二"></a>最近发生的事二</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;最近发生的事一&quot;&gt;&lt;a href=&quot;#最近发生的事一&quot; class=&quot;headerlink&quot; title=&quot;最近发生的事一&quot;&gt;&lt;/a&gt;最近发生的事一&lt;/h4&gt;&lt;h4 id=&quot;最近发生的事二&quot;&gt;&lt;a href=&quot;#最近发生的事二&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="记录" scheme="http://mietl.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>阅读书单</title>
    <link href="http://mietl.github.io/2023/09/14/bookmark/"/>
    <id>http://mietl.github.io/2023/09/14/bookmark/</id>
    <published>2023-09-14T08:15:08.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="阅读书单"><a href="#阅读书单" class="headerlink" title="阅读书单"></a>阅读书单</h3><ul><li>2023 年 03 月 14 日 - 《我亲爱的甜橙树》</li><li>2023 年 9 月 14 日 - 《我与地耘》</li><li>2023 年 11 月 14 日 - 《5%的改变》</li><li>2024 年 2 月 16 日 - 《我二十九岁的夏天》</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;阅读书单&quot;&gt;&lt;a href=&quot;#阅读书单&quot; class=&quot;headerlink&quot; title=&quot;阅读书单&quot;&gt;&lt;/a&gt;阅读书单&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;2023 年 03 月 14 日 - 《我亲爱的甜橙树》&lt;/li&gt;
&lt;li&gt;2023 年 9 月 14 日 - </summary>
      
    
    
    
    
    <category term="记录" scheme="http://mietl.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 动画</title>
    <link href="http://mietl.github.io/2023/07/18/flutter/animations/"/>
    <id>http://mietl.github.io/2023/07/18/flutter/animations/</id>
    <published>2023-07-18T08:40:39.000Z</published>
    <updated>2024-03-05T05:57:55.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-动画初步"><a href="#1-动画初步" class="headerlink" title="1. 动画初步"></a>1. 动画初步</h2><p>在 Flutter 中，动画可以让应用程序更加生动和具有吸引力。Flutter 中的动画是基于抽象类 <a href="https://api.flutter.dev/flutter/animation/Animation-class.html">Animation</a> 实现的，<br>Animation 对象 用于描述动画状态和取值范围，负责生成动画的值和当前动画的状态<br>通过监听动画的状态变化，我们可以根据当前的动画值来重新构建 widget 更新界面的显示效果。</p><p>与 Animation 一起使用的常用类包括：</p><ul><li><code>AnimationController</code>管理 Animation.</li><li><code>CurvedAnimation</code> 用于定义动画执行曲线。</li><li><code>Tween</code> 用于定义在指定范围内执行动画的值。例如，使用 Tween 定义从红色到蓝色或从 0 到 255 的数值，实现颜色的变化</li><li>使用 <code>Listeners</code> 和 <code>StatusListeners</code> 用于监视动画状态变化</li></ul><h2 id="2-动画控制器（Animation­Controller）"><a href="#2-动画控制器（Animation­Controller）" class="headerlink" title="2. 动画控制器（Animation­Controller）"></a>2. 动画控制器（Animation­Controller）</h2><p><a href="https://api.flutter.dev/flutter/animation/AnimationController-class.html"><code>AnimationController</code></a> AnimationController 是 Animation 的一个特殊子类<br>他可以控制动画开始、停止、向前、向后等操作，还提供了<code>Listeners</code> 和 <code>StatusListeners</code>方法 用于监视动画状态变化</p><p>1.创建动画控制器:</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart"><span class="hljs-comment">// 创建不启动运行</span><br>AnimationController controller = AnimationController(<br>  duration: <span class="hljs-built_in">Duration</span>(seconds: <span class="hljs-number">2</span>), <span class="hljs-comment">// 动画持续时间为2秒</span><br>  <span class="hljs-comment">// reverse: true, 动画方向</span><br>  <span class="hljs-comment">// repeatCount: 3,  动画重复次数</span><br>  vsync: <span class="hljs-keyword">this</span>,  <span class="hljs-comment">// 传入TickerProvider对象</span><br>);<br></code></pre></td></tr></table></figure><p>要启动动画，我们可以调用 AnimationController 的 <code>.forward()</code>方法，它会让动画从头到尾播放。<br>你也可以使用其他的方法来控制动画</p><ul><li><code>stop()</code> 停止动画</li><li><code>reverse()</code> 反向播放动画</li><li><code>dispose()</code> 释放资源</li></ul><p>创建 时 <code>AnimationController</code>，需要一个必传<code>vsync</code> 参数。 <code>vsync</code> 可以防止屏幕外动画消耗不必要的资源。例如锁屏后，处于应用后台时,都不需要执行动画。</p><p>您可以在类定义中添加 &#96;SingleTickerProviderStateMixin 将您的有状态对象用作 vsync(垂直同步信号),当有接收到信号时继续执行动画。</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">_BobState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">State</span>&lt;<span class="hljs-title">tickerApp</span>&gt; <span class="hljs-title">with</span> <span class="hljs-title">SingleTickerProviderStateMixin</span> </span>&#123;<br><br>  <span class="hljs-keyword">late</span> Animation&lt;<span class="hljs-built_in">double</span>&gt; animation;<br><br>  <span class="hljs-keyword">late</span> AnimationController controller;<br><br>  <span class="hljs-meta">@override</span><br>  initState() &#123;<br>    controller = AnimationController(duration: <span class="hljs-keyword">const</span> <span class="hljs-built_in">Duration</span>(seconds: <span class="hljs-number">2</span>), vsync: <span class="hljs-keyword">this</span>);<br><br>    animation = Tween&lt;<span class="hljs-built_in">double</span>&gt;(begin: <span class="hljs-number">0</span>, end: <span class="hljs-number">300</span>)<br>      .animate(controller)<br>      ..addListener(() &#123;<br>        setState(() &#123; <span class="hljs-comment">/* 这里用来更新界面 */</span> &#125;);<br>    &#125;);<br>    controller.forward();<br>  &#125;<br><br>  <span class="hljs-meta">@override</span><br>  Widget build(BuildContext context) &#123;<br>      <span class="hljs-keyword">return</span> Center(<br>        child: Container(<br>          margin: <span class="hljs-keyword">const</span> EdgeInsets.symmetric(vertical: <span class="hljs-number">10</span>),<br>          height: animation.value,<br>          width: animation.value,<br>          child: <span class="hljs-keyword">const</span> Text(<span class="hljs-string">&#x27;Bob! ！！&#x27;</span>),<br>        ),<br>      );<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>使用 SingleTickerProviderStateMixin 时，需要注意他的泛型约束 他必须在 State 类中，并且需要继承自 StatefulWidget</p></blockquote><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">mixin</span> SingleTickerProviderStateMixin&lt;T <span class="hljs-keyword">extends</span> StatefulWidget&gt; <span class="hljs-keyword">on</span> State&lt;T&gt; <span class="hljs-keyword">implements</span> TickerProvider<br></code></pre></td></tr></table></figure><p>2.动画状态(AnimationStatus)</p><p>AnimationStatus 类中包含了不同的状态常量，</p><ul><li><code>AnimationStatus.completed</code> 表示动画已完成</li><li><code>AnimationStatus.dismissed</code> 表示动画已消失</li><li><code>AnimationStatus.forward</code> 表示动画正在正向播放</li><li><code>AnimationStatus.reverse</code> 表示动画正在反向播放</li></ul><p>你可以根据这些状态常量来执行相应的操作。</p><p>要监听动画的状态变化，我们可以给 AnimationController 添加一个状态监听器，例如：</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">controller.addStatusListener((status) &#123;<br>  <span class="hljs-comment">// 根据不同的状态做不同的处理</span><br>  <span class="hljs-keyword">if</span> (status == AnimationStatus.completed) &#123;<br>    <span class="hljs-comment">// 动画完成时</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Animation completed&#x27;</span>);<br>      <span class="hljs-comment">// 可以反向播放或者停止动画</span><br>    controller.reverse();<br>    <span class="hljs-comment">// controller.stop();</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == AnimationStatus.dismissed) &#123;<br>    <span class="hljs-comment">// 动画消失时</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Animation dismissed&#x27;</span>);<br>    <span class="hljs-comment">// 可以正向播放或者停止动画</span><br>    controller.forward();<br>    <span class="hljs-comment">// controller.stop();</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == AnimationStatus.forward) &#123;<br>    <span class="hljs-comment">// 动画正向播放时</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Animation forward&#x27;</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == AnimationStatus.reverse) &#123;<br>    <span class="hljs-comment">// 动画反向播放时</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Animation reverse&#x27;</span>);<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="3-动画曲线-Curved­Animation"><a href="#3-动画曲线-Curved­Animation" class="headerlink" title="3. 动画曲线 (Curved­Animation)"></a>3. 动画曲线 (Curved­Animation)</h2><p>在动画中，我们可以使用 CurvedAnimation 来定义动画执行曲线。例如，我们可以将动画的执行速度定义为先快后慢，而不是默认的线性曲线（匀速）。</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">animation = CurvedAnimation(parent: controller, curve: Curves.easeIn);<br></code></pre></td></tr></table></figure><p>Flutter 中提供了许多常用的曲线，你可以在 <a href="https://api.flutter.dev/flutter/animation/Curves-class.html">Curves</a> 类 ↗ 中找到完整的曲线列表(带有视觉预览)。</p><p><code>CurvedAnimation</code> 包装了它正在修改的对象，因此不需要子类化 AnimationController 对象来实现动画的曲线效果</p><figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">final</span> AnimationController controller = <span class="hljs-title function_ invoke__">AnimationController</span>(<span class="hljs-attr">duration</span>: <span class="hljs-keyword">const</span> <span class="hljs-title function_ invoke__">Duration</span>(<span class="hljs-attr">seconds</span>: <span class="hljs-number">1</span>), <span class="hljs-attr">vsync</span>: this);<br><span class="hljs-keyword">final</span> Animation&lt;<span class="hljs-keyword">double</span>&gt; animation = <span class="hljs-title function_ invoke__">CurvedAnimation</span>(<span class="hljs-attr">parent</span>: controller, <span class="hljs-attr">curve</span>: Curves.easeIn);<br></code></pre></td></tr></table></figure><h2 id="4-Tween"><a href="#4-Tween" class="headerlink" title="4. Tween"></a>4. <a href="https://api.flutter.dev/flutter/animation/Tween-class.html"><code>Tween</code></a></h2><p>默认情况下， <code>AnimationController</code> 对象范围为 0.0 到 1.0。如果您需要不同的范围或不同的数据类型<br>可以通过 Tween 配置动画以插入不同的范围或数据类型</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">tween = Tween&lt;<span class="hljs-built_in">double</span>&gt;(begin: <span class="hljs-number">100.0</span>, end: <span class="hljs-number">200.0</span>);<br></code></pre></td></tr></table></figure><blockquote><p>动画还可以插入除 double 之外的类型，例如 Animation<Color> 或 Animaion<Size></p></blockquote><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">colorTween = ColorTween(begin: Colors.transparent, end: Colors.black54);<br></code></pre></td></tr></table></figure><p>要使用 <code>Tween</code> 对象，需要调用 <code>animate()</code> 并传入控制器对象,来创建一个动画对象。例如</p><figure class="highlight dart"><table><tr><td class="code"><pre><code class="hljs dart">animation = Tween&lt;<span class="hljs-built_in">double</span>&gt;(begin: <span class="hljs-number">100.0</span>, end: <span class="hljs-number">200.0</span>).animate(controller);<br></code></pre></td></tr></table></figure><p>这样，animation 对象就会根据 <code>Tween</code> 对象的 begin 和 end 值，在 controller 对象的 duration 时间内，从 100.0 变化到 200.0。<br>你可以通过 <code>animation.value</code> 来获取当前的值，或者通过 animation.addListener 来添加监听器，当值变化时执行一些操作。</p><h2 id="AnimatedWidget"><a href="#AnimatedWidget" class="headerlink" title="AnimatedWidget"></a>AnimatedWidget</h2><h2 id="AnimatedBuilder"><a href="#AnimatedBuilder" class="headerlink" title="AnimatedBuilder"></a>AnimatedBuilder</h2><h2 id="Hero"><a href="#Hero" class="headerlink" title="Hero"></a>Hero</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-动画初步&quot;&gt;&lt;a href=&quot;#1-动画初步&quot; class=&quot;headerlink&quot; title=&quot;1. 动画初步&quot;&gt;&lt;/a&gt;1. 动画初步&lt;/h2&gt;&lt;p&gt;在 Flutter 中，动画可以让应用程序更加生动和具有吸引力。Flutter 中的动画是基于抽象类 &lt;</summary>
      
    
    
    
    <category term="Flutter" scheme="http://mietl.github.io/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="http://mietl.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>2023-7-5</title>
    <link href="http://mietl.github.io/2023/07/05/dear_diary/2023-7-5/"/>
    <id>http://mietl.github.io/2023/07/05/dear_diary/2023-7-5/</id>
    <published>2023-07-05T08:49:46.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="19ef8eee071f3c52586623eb707f338c1f0074749bc49096a1a300afb0d44b03">f821c1cd86e92e41916e027feb9b5da25b96c96f7dccd3b594276d93b4b3f98bb81fc37b5a52747b686914204fc2e764da7225314e7ad30b49c1d667507f7622ff85597d2f1ac3d98b5b6736123a5b51e60e0cb62923fc0ebdadbd0290b24a23dd5d78c7702c688e07a0f0ebddc96d718296b8f68f42d8578a8845de515d57fb727d185f632ea9290377edee9d4fa4c57ed73a8ce34ffdf82ba0fb12a9d3389f04e4d950f6e99c4dd10bb1392f13bd765032ddcb8b9850bfbd6db3e5c2b1db483d469b7d180d4164740a58952185182eed79cd37edbebeba0a8888f205f18830e205903e403944b9413b421cd33a43f1388c5a9d3db23128f8790a4a626c514cc671a82a9f25124ccd09aa3fa642c8c6f3eaef01c2b918d76cc3546ab986d48f43a804cd27d3ef8e07faaebeb098b8023ee519135822964595d288e4310f219a61cb3aae0b503e4b626c2a0c9895620fadf2f66f5e231af4003966ae97814481dba8274f8d4d4cee430c3544f7dad3b8198ac800845664a308bc42c3e8d0f608ac3f8fe29606ff95dcb36792193f81778a2227832edf8a1189ca947af0e20759077f312f332cec35aee5029c8ea9a14e7d5e75db068918b85108055b50f2ded3e2798cffc79da05fd73417ffbd5540f66194e6ef4d59195658684dafb624c36e227974c3ed3c5a648480056f362e9ef2b51f4df329a9883709c6086bf4381a79cffe18914d9e57c287f5359738c78e31518f3d3f6d66a1a6f495e27bdbba6d264a3346c9fab2d20ce2fcbd079f54fec69319f1d3ea6df0020b5d55c52554d0735acbf861c5973a98f293230385e99d414ae74797636df2dba3d20f0e86aafe00ba82e21e5911ca142f785d20e2a50c5626b94f59f4339a81f01bca1f59a61afedc77953f45dfb45ed1f96cb470335445505884e3bc947497cbe70e09e0f1d6cc916df8f829819668773b98d891134129ef82ca5ab7e2c2bdc28c57966d768b992bbb13db4b231dc65c202d1aa5b668cd5299e5079a7c4ba3436ab3ced3290b7ea2631593081f7197278e44e8a963777be6b9b2fe696a7c8453a83806aa82f480ca1def6dacad44768011e10963abd26a8b7416ae838f36a95af91ba3a999a1d8556f92560c0729421d67f0bcb5ee8c53843f8ca775c56bca0555ba195539455ac1c7f8c614ed241e49b1717a4fcd5307572ca9eaa9d1505cd403017ed6addb8553cd0bbddeafc2905dac0292ad5b53252fb54fd4ee5be37c5e596a0b8cc98750c950a8710230a83e3886d9d980d3cb53f4d9c115174dba1cf9bda89787b0fb5664704549058d9f21591c3a2fe089d99c27634d6f5895b9a20f688ad16e2ef02f9818160465b842eafe541f4b88cf9e7218efdebee04b3fbb16df9f0e36b3b96fd959c856517e340c7dee2679a60d3eaa3e269cc49b6767194ff5e16fdf08b5b6f26be30dddd979e15585d8cc92554f401dc7a0d4eb8b4cbc0e377b0dff261349a6fb85369b17da84b6542104a44823dc05d3d761d54589508b649a88dd792be6634c9fc206df1ca91046719023755b982db17d4483277252a1d92b685d1626c77948fe9cb5cdad1865c0b2cdd8085ed22bc9b7fa1250319bcabf70c9a104c6f1da0db89d4828a3bd97b63dfaac66937e6b243787ddd67b7f46018b0ed1d70c2429642f3ad2b8ee7aaf68b3d8cec7c662</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>2023 3.9</title>
    <link href="http://mietl.github.io/2023/03/09/dear_diary/2023-follow-up/"/>
    <id>http://mietl.github.io/2023/03/09/dear_diary/2023-follow-up/</id>
    <published>2023-03-09T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d56522b17dd8ac5084c5add15563e39f01223e82e883651600610d4c13709019">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069aa4f780852d52db03cbd195f49f58cf6b5af03cfbf278040f5e1e4234ce7f5185ba2bb303ce5d2f3ee2bd2c49b228d3a7812bfc0ab59597b216e188332e4845dbf1711388340e277bb87a0436830e2f93b8804612ac0b48da65638bf963515887ed0bc4ea868aebfc9637dbd6f6626981c9ba6146f58c398d486e3ee7f4f7a84f888d5bf66688407dcf7b6842f53ce81e280a0b8b9cdc64146544414e75d516681ec05c9f0a3d211a166fc69863d08903448e67241b8c9a3509d892d4999d069f8ac2575289297504dc2065a9794320e66bac2f4469b1c87c06c25e4fc869e324e13240b90ab53cada5c3a9372802a7231f43b6058860a9666fb9ee42830f31610420a2680de8d9cec7774a841dca57d120508938b9ea2bab8593a51249d346dcd382355b500d32205e2b4f4d65ad6da4958104dc72449bed61dfa759e7cc8c4a10d9e4d7784611d26f2591c47a58aa07ad9cbd9ea6db9bcd4a8bda7328649f126c8e2197da8fc48f90820a8800a9f0c50fa4ec5c62c204f940ef2225124b96a73c5df0f3ecfcc779d9f75de63bf1a81b8075345948b006ca37528241ee62ab6968f2983ee215682f53e6106a8b585c19550ce2406ddda51091ef070d2db4f31f3c18948b136ae4e80103ef819d45b49dde47ada4aeffc77768d51c8713ded40f94e5503e4374ef8960c3fa9885d77238f1092252af3c25904c32b94be609dd5c802221aabdd688bddf4bac77245ac160d1466bbc14d25ac460b0b0713ae6fad7b773d5d4989036b0892de2d82c1f5ba971cea6fd36967fe7b310ec170a4c1f479fbab85de99898928f10aba10b19a7b893878aab61bc244104000794f8c640fe4b0e5d674a929da5830751760f669206491d6913976788fec5aa9215c5865076</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
    <category term="2023" scheme="http://mietl.github.io/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>2023 完结</title>
    <link href="http://mietl.github.io/2023/02/17/dear_diary/2023-wan-jie/"/>
    <id>http://mietl.github.io/2023/02/17/dear_diary/2023-wan-jie/</id>
    <published>2023-02-17T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1d1881cc8586b580da3f728b59aaf0ffce698dda1c71ccb2914beb93fdb7a764">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069a096a518bd93c82ec9b66f586a583acbff7ad2e736b1101d8271084ae69cd6a86096d88b813af9ff21f5b2b2bf1395deb1281baa8db3a95b3350e897a092c5fc9cc52cf1012765a91938a93eeac853f6e72762d8d3fdf2322498d1cd06b72c0e6b816da7386894950e6cadf318423714f11299779547b0175a0b852bb2b2c4f2da71c081f0c4db5540fbe661b85d04f2c7c0ecdbe4b11ce08ec2f2c43885dc569f27d1728d855839d756a30ba19f218233ed6a961bb8e55c05425b60599785ff9ab41263d58302d6ed9223c54bc0478ce6c334ecbd348dabf9a4a09686be092d6d38868dfa9084dbdaa3b7c345ce3338c1c493751d6513b44c89fc0d2db11da8dfd2ca6cf8ed44a9a5c6d0575b7f526e2f4de47c94bc6dc1b36ff5b910f7947fa8c8076874f6c2e563d7b06f3fd0349ca8b0dd35905258cd7037a3e34040d0b35acaf50715b924e7b9ca11a7185afe31bb968bce2dd913cfaf37fd4a01e7aee2fdabd1a6b3c19d035c71665ef8b1b5b6e17cdfaed08f49f0935929074ff32941bff9fef167198ed82f1fc8ca215c053458ed764da5a0d3b97e97fae52c1343b3bf8f89dcacbb700bc779e75313ec700bf3aeaf5ed7ef993bd7a65d94d203b9a60507bd331791a2e624c67743b2d8a29cc017a3b4008a7cff7bebb782efe9e8b8cd67f77bcce1ee6d67e5116d3c17f18c7c453117e862402e7abb057d5dabcf854c4230123e46b2ed1f4c2c8196f4b43ec4bc30512312cdb64c959c7fb64323c8e349b2bf546a63327c59690c83ae5f4443128e03124a5708f639931efb225471bcbd981e48382d287f907c54ce125358146354fbdad0cb47747a4791f0533ad47d534bfd36dbf889301d551618d20bc1faea66c821d36f002731759a5f282c71de37b47ef198b98ef993c15a961dee7f5c47e6a841d8c936206acb8dc9aa0684bf54a90850a57d25fee8030c4f9a8a504574da25376151142560faddd75a30aebc2f7a1103a7042174ead6ecb7e29001d43a6ab2bf1c1153771d4f0de066c8fb8960c5bb50d7fe55ad8c9d3aa15f912af56cbc8319e71f4dfd71e23d3595942c4aef27d15dbf999cb6c4fe8603d39ed2511d701a8ef6a1fd06d225ed944657bd2bad3d71f9e76885482fa0bed25e2dbdfaae9fdf77d6f5a7d38e44b6f8011b5f3964e6e8818471600e20eca2b65b88dc4cb6cf6635e96871fae3a863552dae76c8614858a6bdd7574c6ce60a7de2cf6dee0446c5ba7cfc23e45bc2856ac085649f0a2b80f674a097e29858cf3ec229af75e38084119f149ebf72d685a59bca08d0006cd9855b3e13870c4061e1fed5667c2d9b20beb3b2c3c262b62e6f68c9b99c8e631c6c5e2440b5f0d873481a42aed4cf1c12a0152c11a85bc42ed267f08ef</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
    <category term="2023" scheme="http://mietl.github.io/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>2023.1.25 - 初四</title>
    <link href="http://mietl.github.io/2023/01/25/dear_diary/2023-1-25-chu-si/"/>
    <id>http://mietl.github.io/2023/01/25/dear_diary/2023-1-25-chu-si/</id>
    <published>2023-01-25T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="560acca5d5701aa9a3769f412a6265e461dc5f52e9c0f49625f454c8363acd16"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
    <category term="2023" scheme="http://mietl.github.io/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>2023.1.23 - 初二</title>
    <link href="http://mietl.github.io/2023/01/23/dear_diary/2023-1-23-chu-er/"/>
    <id>http://mietl.github.io/2023/01/23/dear_diary/2023-1-23-chu-er/</id>
    <published>2023-01-23T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="97cc9a0e93541c587090fe88b6a2d6f3c4bb273a77c5894548e946feba40707c">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069aa4f780852d52db03cbd195f49f58cf6b46b04306c56c5f532342d6be64e7372981b7d2b91ecd3be7e79941d3feb5be671054fff28c06b6c6c34467525a5816809d6d7738b5402ebbbba45c76ed3eaf92d451b5dbab6ed4a85b6f93f9a6348063e72292ac2b896bdd438d570f9fb97a439248d69c5b32a872a5276574a9f4556a1dfef7f27c7dadf021a26af7659a807376e8fbce4ee53ce6c2ec5d50905758786effb6d414d747df98dc421f68362ff823dcd4ac229ac994edaade7ef449a5b5e5a528e896201e79b1a6f87151814c5a288af1ded92eacad91b5fc006f61fadca72d3265d8ff43128ced7c58f934ef0bf322d020e9df0b172362d85833053b1b69144ceac7cd4ca8217b618e7d7fe8559d8fc521cb252971c97031319295ca468bb14b91851d93513eb255d34af2015a636e59fd250799eb17af5904f34131b789ff50702dfa7c381702f8b0b6cb2a521948afc108a2f1bdeeac8d67ca596273f19e188f8df31c10aaaca90130222be079f0ee1f14e3e3b64c9bacc051ec9dadd1a12887ad513db29edf6f793093ca2c7344abc86873fa8003c8bbdf8d6529162fe10b622eb1b3bb78cd41b23e783ab4b1fda8d5b7cfc01d3cfc8a8b70ba629d49aaa1bd7119543eba8d888fe104c4d4d827ef3d192476ef0f7865bf430a80c96b61af33558f967d24d831c372bee8afcb143ac1301c38819a91e46aafab825d51deda969b135c473ce6b58f1cefedf14d4ac93de9febd91c1211c027c907df99d6e95d721258537783b514bda3d525629902551fae1221086a4e9e0f88c15fd8b46ff76fcf9bcb8ca63b167682b90bc14e1725dd63a0b06b99dbbed4513ae0650d2a21d06e79223bed64a53bcad212ebcb1deea18aa3b4da8c12ac76b051203383bb052f7e22a38b633ace0ec6d7268327fc7c331a5322554e4f8fcf8b136d9a074f09a3ffcdaae92f1f49113c27b31a1fc8b9a2b6d71911f734364fbc0325e0861aaf4b80d080ca6db171747dae2b32a8e8da5d63ad77d606e94c1280a140aef1bc003c88c91ce0a54612e1641269bacedac204f87c6df90656a0e3af4a59ba5e45d1991802b861896ffb31d3cf52157e80f8382b16ac798a86f2cad05d791f4610434057a743b48031b56246d6440ee6eceb5ffd56d1f2fe30b4c4b5478fd111bdf256116771a3a1108711fffe305124da74227c3a97cfb6e833c923d5e316f0e9d3d0af847c71dbf97ac75fd1d6d4c2df8e429210f2f06468a64ed59b9b8c5b0461dd4756aa0f1a7582243c044cbc39433d24ca55e88ecfbaf8a2b428129b744f02813a103d5d110e3cb8ef66c8e060554cbed3cc8513919792d35de6e1437cd9ae9df2defaa0d670fbb416f04ad6c58147f570599c5d0e4007f2129da685265176d0ab1bfd60d1a7214c715a6b1140dbca93c35a55a78a780cf6b546ab03a3b2744ea5bdb09430298ebac98e4a1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
    <category term="2023" scheme="http://mietl.github.io/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>2022.2.10</title>
    <link href="http://mietl.github.io/2022/02/10/dear_diary/2022-2-10-ed/"/>
    <id>http://mietl.github.io/2022/02/10/dear_diary/2022-2-10-ed/</id>
    <published>2022-02-10T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cf5c56d24ba4d0557d74dc1e42c8ff4cfc50fd6207bbd0bf0fa8d68c6090c3ce">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069aa4f780852d52db03cbd195f49f58cf6b4f6c5ddf971696333943f8b576eb75e00772d873f8c4edfd4dc38aa6b8c061722ac59dec93c0559e68983e509d12999cdf96dd13badce859b9dd15f4f9f3dccc6179cc20afde04ca46d8e46ca2a4352ba94221b5cf4b9507f7c276a2331d2296c46bbf67a0abf4995d4d7f50021c7876b182db9481696a39fc4d9fa71588f0868814fa80c8975817ab32857ddbdde3f804fe176a1ee94ebc12d1d376e3f647f571c5ea5fefc9c02bb72cd1bc91915850a2b0f445098ca394984c9c6439089938e78ae433c5f4e967ab88743c3865985d7116fa60268d1d6c91d664f068b33c6f836c693ba48a222eecb454a56adc9a88f4acdebe2294383e5838d7ecf21828ea4b48da882fde02a96e2f20a15dafaba1c4a119a5cee9648f693eec5f238a0e157ce9c9415495cadd465701ee261393db</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>2022.2.9</title>
    <link href="http://mietl.github.io/2022/02/09/dear_diary/2022-2-9/"/>
    <id>http://mietl.github.io/2022/02/09/dear_diary/2022-2-9/</id>
    <published>2022-02-09T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cd1179c4224355fdac2ef8e0533a26ae73617e058fa42056c952173ee8c7e565">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069aa4f780852d52db03cbd195f49f58cf6b96a9d82614a26955530580025ee3d895474f824d687d2bfd77f2d858fef3d776fb2e45992ba01728558d31bb5f918d159586b862ec1db4ecb3436130f305a9faf141fb0930e69a1f0f9060d9e9ddd99f4187711a2b58145c04fc88917fab0c5fecb28121d35259f47698088eb25a56d3e85ab5e7a8e2af8411fdb4927aea6a083eda5b937f9c03ea84b3a9bc10b31865eae4c70ce10e1b0021501c8f04204aaea0fa4bbb09e6dc10dd0635e3ecde465950a80ff091f94e6b6106955e00fcfe189e6ad123f93f8c0e547785c7838df9b53ff8cc03675d63373fe85c5f66ab27961a823b826ad2114e972ea85a864e1ba65e1d143021322d8a1a1e3f565c66c6566e2353ddbcda051427126ee7fd1969087f37abebb0430d34e9d79ab7ada8aaa963a04911e41860bbb073638661160e3ed0051411c5f0392a367b77889372a50d12fd94672c0d3eac91ddcf8827a7c0be25be0e608ac0fb3526373897d651e0a90d2f0e5f6d57112c6f56d91d1ba367805909b553db0b989422901b2ec7359ed1a3df4aae22e52b4a8fb57f2c3085d228006f66c02e2ed2072053825b34e0789e6ce2e97efb5856bef57c6cfe4b228b53f149cc7ecae7c7469cc3b40fe3811cb5cddaf1ca4adeb16998ec3e5e0f997dfd1edbc9c606c49fe065b99a10a617be05c965826e7fa66f715f4944b2ef784033f038488e0eede94bcf1626291b87bf95f4d4c5b4055f100dfb654b6d0fc04cb078082abfdb6d8af81a5a57ace19cefc093209349649a4645b53ebbf57b9c88297c53ecead0e6502c91c4038095a3d04e837d271b1dd36fcc25d6449f78f743784fd256f584cd2f11213ae5ee9928ed25b5b5bd8ead92c0b9334b522fb586598f1a3380185ee8f2961beca0ea61adfd24d7314e381bac98ad5f56aa6a8f57860cce743bad5b0cead28fee46b5e3291a9ccbf2438c17690e3d9d726db0df33f7f908f9a79f859e699d482fe769b55cd7976fd67a54ed6775cfb9826c319229dcb00810d3dc435b69ccd86fb7891e6b83550fb384b96efc9a635c1e70a21c52e5902d381c00e81f5bc805c5498c2557a5dcdd292bed827669b4a51fb247c9fd225261b75cc9205e04fe032e834cd01ad091356581b1e985c7ef6ae73f08c32f5a06e602b818e8884b8e86f442f5060275aa2432b20dc0cd6adeaedea7eee57ea4f7cefaec82485a3a1bafee5c6e6e029cb1d5dab2df1b4b312afda9ddd7bb1fb234d489c18b46672589b0b59ad48928f7a51a29cc0148580b2f78d556e5b10bb282391393e44f22f9ea0008ad44e95c43fb018fcf309f6b1e4b87c14b64a2fc2853acee1a07d9b064be145755fc6df277271da92e92bfe6deda71b3731f56ff8add0697f3e01f319fe028987b7c8e9ea02109b1cfcd6b35d02ae67af1ff5f44c4abb3ff7305a413b1fd7780afa53b8089ba</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>2022.2.7</title>
    <link href="http://mietl.github.io/2022/02/07/dear_diary/2022-2-7/"/>
    <id>http://mietl.github.io/2022/02/07/dear_diary/2022-2-7/</id>
    <published>2022-02-07T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1467e5ddd7d1521459ccd3266715058f0e7161d87935cbed12574b31c72be636"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>2022.2.8</title>
    <link href="http://mietl.github.io/2022/02/07/dear_diary/2022-2-8/"/>
    <id>http://mietl.github.io/2022/02/07/dear_diary/2022-2-8/</id>
    <published>2022-02-07T23:26:03.000Z</published>
    <updated>2024-03-05T05:57:55.435Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="忘记开始的那天了吗？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="58a96b93180295da21efcac86e394161b7b8cb430a53a074e766cdfd07a494a6">f821c1cd86e92e41916e027feb9b5da21d5299f79da3177ab653ce75b3ea069aa4f780852d52db03cbd195f49f58cf6bb96e5139d3db43e17494a21f6e3ddad3ca50169c012c00dd540f6c402ff33b2ce56f03d71b9899433f7e3c172534ca1c934938cdeaa378b783e5f903fd74342ec916cc77a9a5261388d46a0008bec04e1c364e6e55073a78ec4520d8a09674c15b27af9d8fa8d537e66921d8f9020b69d4d17221c45c515377622b7068154ac83eb485fdbbe9b9fb30e3d5aea0bcb1c1ea38cc2f31af940d1effa4746a1ff8432d0a8a097e7cd6ae6e8d3d7064a1a34bd86a1f2f0a9388313b68d4421057fd3ff089fc92d2d1655d968384e2fd7cd3fbc2fbca406072ab1fcd87e432d42bb3cb980f65eb8f60dabf78ae5a3b7109f43578406281e76fb1f4ad289a6a3d620a6583d934522a414e7c25c177ce553582a44be22d575b4ba1a5868965cceb2906a1a84da7bfcc377a65a55b6734ffecbbf047a5c503b5ea0ef847a6b7ed7575211a413229749a5acf775d75d9b3877055730665ea04499ad29110e4e6d816cee0a62cd68950503d30bd2209e5558e649ffffb2358775e21f0f0abc2f119e1860de4f7882fd5a8fd46e261721fec77bb6a1d2bb3f7270af155165790e86e8419dd4c4f5ef7a07dff66dd64b5d5eff2c10da07bfecdf2dba1f149f3d16cabaf2e5e23396b6ea98ff3e7f190d3a133d5b92aa32b564792cd31cacbd57975e0646bf89fa273f5f924d8a769989147423aaf0e8447a8ec254c1904287f50e9a9c5a90f2e513e7f8e93b4f7b6bf23e14d014c17210853475a0ebddf567bc542a12433b637cf0fd6973a456f0e37d728005a380b2e4f9c9eb8811896017941072f0cd3ff18521dcf282d80f4983f221031ae785ff7383bfabdd77bc365643ee11555ca992326bfe4bc54b34446ef1fb42d165298c2b68580aacd5a8d8fab09b4499f1f30967227d65eb1b0295061d448557a93648e8ea6757c195833ed8eb24677f168b5b6154fdc6bebbf0a808078adad55c52434aaa9701d6d87877da0f5110e7248203ab7d01d2c93886959dc10de88ccfbc108c243f99335f0c36f4281f3fab3608e05656c05db31c1a261bcfc6b41711906c89f19736abf1021d527606f044c5f5ff7ac5613355343cf832b67dacee966c60cd0a3b0f23a710ec340a138eac7cc982739c52e98c7839f3eb650b5c94f8af6c8a83898e992b8ef924f703c21ac6a7f8f21845f794bb073b45c8b75305048f1cd4ba15870386ad7d7d5d08a078865a781b8e4455a762a22c6dd66501a03e7b0dadeabe0dd610c6b3a7d27988ef189556d0710fea9d9f8f7011ac6894ffab0034b4a17af19d63d483525e7a3ce9e455ac477e8820494490e5558e1f758011c876d5fc65e1a8080e7aa08d14ce7cf5856cf493889ca6574b2b1e65c10d842531a76c64466653f58c10eef329392512b47bfaabd76aa610b083dfcb69f83820ec3ffc140808c8e5834af88a1403ccdcf31d6c75fb5bfd8bd7e14b21c659ff2959d54722ec7f99b9b3f4dbd8a789a648cdd7a0ab1e79e1fda2e9013a58a389779f0f5995f080c29702317b98c5f718193a68dcd23a7f5f63dce3aab89acb8c9bc73dfdbfd57004e83a0570dcab229cfbe5a8cb2f97e2885fc140a648088c7ceb7952662ae988f461f3ccf03c613f4bf420497659b540ba0d2a1d6071857b976970c6332c555544f832e0c4d8b8aec048634e17c6ba0dfdc69ed244dc04d16248275cc233b0505b738bba28de26f17de3d4a996e425f6a39f7de9c4c0787b00599160ac567ba13e02041384469a8281bf4a3500d7c9453074bcdf8d5dc07e59d96bfa2d65f60c205da7c425e6199991ae62a932071a5ad3d60d4c913643fcd795b4c8222875b8262348a13b0821bc514dbcf344f2a4ae3768a0d3da41e4c730dcf4f41506ad32e757153988a1c664320fb063ef8473be24addffa94bf6e780b1b8bb4de6f41ace78c01b6c7f612c7c3cd4120c3066bab91f29ad8f88deb3fea2db9e2b0eaa84454b72ca247b2c14ce569fd1b093f226f7f372f6fa9d051e20d1dfeaaf622f75fe83431e41bb5d24d86c3718f0a8699e179b59e81fbd537783a6b8ae8930bcf0899bf38e5e78d5d2969cbcb5fd9ad8c21932c33f0176491b9be263aaeb51b4b5ea371b2e5caf00396151b08341a5e32d53882056b96599e9ecbcbe5457a709f3097bb4e04c150947cb97b01d669e6e10ba1e6499bfa1603688eb0a02fa43204dc15997c7371c872daa2f3a9cf4c450a8dc15fafa3881a02fcec024564009ab1419f45c72092cf153383a542c41c69185859e13547e5d34e7228842d14d42337eb165d090f306b0f189497459a4623bcb87aaf4d489fce5fdaa9fe077c106115623b9abf31eadf6addc3c40f02a2bd0096109a7e7e7d07cfd31efa674c700a364a83ab0d2a67a97435ebf4d4af281d72b85c71481ffa29d8a05a7164c1ed50e48e066b0f145e96420ea06899fec24a37b1565d7a5214beb751af5f137658695a89d039c2c53093f0f3c6b5127a1b0393bd59ac308d12d3950df56b18931271b4fcd8595b1b71ac850eb2f93e8ddf41a0bfc01fedf36c1f5ba81639ccaac22d982b5845741bba741c5a06ef01a665d7f71a0877ff950597a541fb3296c14a52a50af029fe2055f6c17446d864e752e7aee0db1c9fa4c222fcd169aeaa8e56dd43f40b3d644f7556aba5ef309e0932b067aa9438c84822de0eb8fc88de06eef215f417b0277ad61a31e512aeee68b2f7583f2797f4929e20e2a4ee9f9f8a8917c567a7477131e25ddb09463d92ed30beeb26b1776cccce69229414a182e218ee6d2e8d9f48f324beecea5b23fdcd279850bf2a8f21f4ce7770ecfe30e45f70457620c60018a02722ee7584edae1cb1d0c3b4bfae73c5f4c9031e18ea5b3a6ff6fe207b1f60ed7d3c4cedb0e3cdb13ff260f9b93e783d2f6a982b290841489d0df70edfc6163849d2b3e280422d971280207b85eb6f37f31c4cf77f4e20b97bea134c3a2ce3509e1450ef3ee103fb8a3788b302a9d25a1f4adea0b1481b3864da78d14ed0ab3778c6e4bbd9ed293e3e071a7f7769ef238c486483d0fbae30ba7c054461f30f334192af20c78e4c4c7cf4ffe4dfebf4c7fb16f389fdeb12dd778b47975e30d75a384b9a7e02037bdf11cd99b4540d52545134606d0ff807c6df1b32acc0b1bb8bd89ac1f95727c1e506dc968d1c6d1ee15517c1aeda7b6836a0f2f06fb439f29316b95beb5d0bfef28a5d2465ab2042a13e3447074a648ed46825e0b2a2183d0b44133b25f09ba6e0f4da3c0d058f3467d6807ff1def6572d9418a94981fbcd8a75d99f4e0a2e98922407d2564952a62b49e750a65d782de0565da4b992fc1df1bf226c10ee13997a0443960f1ce6f54d51eeb735f95ff1856ae1683411c25e333851f1b1b71c1829c551749db61380a14a9785bcb02a14666c8fc40f7dc0f9628bfe116662c44690c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;忘记开始的那天了吗？&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can</summary>
      
    
    
    
    <category term="Dear diary" scheme="http://mietl.github.io/categories/Dear-diary/"/>
    
    
    <category term="2022" scheme="http://mietl.github.io/tags/2022/"/>
    
    <category term="T" scheme="http://mietl.github.io/tags/T/"/>
    
  </entry>
  
</feed>
